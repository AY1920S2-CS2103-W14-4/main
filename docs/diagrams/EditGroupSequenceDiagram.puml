@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditGroupCommandParser" as EditGroupCommandParser LOGIC_COLOR
participant ":EditGroupCommand" as EditGroupCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(edit_group index ...)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(edit_group index ...)
activate AddressBookParser

create EditGroupCommandParser
AddressBookParser -> EditGroupCommandParser : EditGroupCommandParser()
activate EditGroupCommandParser
EditGroupCommandParser -> AddressBookParser
deactivate

AddressBookParser -> EditGroupCommandParser : parse(index ...)
activate EditGroupCommandParser
create EditGroupCommand
EditGroupCommandParser -> EditGroupCommand : EditGroupCommand(index, editGroupDescriptor)
activate EditGroupCommand
EditGroupCommand --> EditGroupCommandParser : Command
deactivate EditGroupCommand
return Command
deactivate EditGroupCommandParser
EditGroupCommandParser -[hidden]-> AddressBookParser
destroy EditGroupCommandParser
AddressBookParser --> LogicManager : Command

LogicManager -> EditGroupCommand : execute(model)
activate EditGroupCommand
EditGroupCommand -> Model : getFilteredPersonList()
activate Model
Model --> EditGroupCommand : FilteredPersonList
deactivate Model

note left
this checks whether
member indexes
provided
are in the app
end note

EditGroupCommand -> Model : addGroup()
activate Model
Model --> EditGroupCommand
deactivate

create CommandResult
EditGroupCommand -> CommandResult : CommandResult(SuccessMessage, ViewType.GROUPS)
activate CommandResult
return

EditGroupCommand -> LogicManager : CommandResult
deactivate




[<--LogicManager
deactivate LogicManager
@enduml
